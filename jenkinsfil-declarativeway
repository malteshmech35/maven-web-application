pipeline{

agent any

options {
timestamps()
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
}

triggers {
  pollSCM( '* * * * *')
  //cron ' * * * * * '
}
parameters
{

choice(choices: ['master', 'development', 'uat', 'test'], description: 'Select the Branch Name', Name: 'BranchName')
string(defaultValue: 'maltesh software solutions', description: 'give the name parameter value'

}

tools{
maven 'maven3.8.6'
}

//This stage will get the Source from the Github
stages{
stage('CheckOutCode'){
steps{
    slackNotifications('STARTED')
git credentialsId: '63a3ae83-9898-4036-9c49-76a0147947e2',"${params.BranchName}", url: 'https://github.com/malteshmech35/maven-web-application.git'
}
}
//This stage will do the build
stage('Build'){
steps{
sh "mvn clean package"
}
}
//This Stage will be execute SonarQube Report
stage('ExecuteSonarQubeReport'){
steps{
sh "mvn clean sonar:sonar"
}
}
//This stage will Upload the Artifcats into Nexus Repos
stage('UploadArtifactIntoArtifactoryRepo'){
steps{
sh "mvn clean deploy"
}
}

//Deploy Application Into Tomcat Server
stage('DeployAppIntoTomcatServer')
{
steps{
sshagent(['d925f957-bd25-4ca8-9e30-cbf1dc0666fa']){
 sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.41.133:/opt/apache-tomcat-9.0.65/webapps/"
}
}
}

}//stages closing
post {
  success {
    slackNotifications(currentBuild.result)
  }
  failure {
    slackNotifications(currentBuild.result)
  }
}
}//pipeline closing

//Code Snippet for sending slack notifications.

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  //buildStatus =  buildStatus ?: 'SUCCESS'
  buildStatus = buildStatus ? "SUCCESS":"FAILURE"

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#walmart")
}
